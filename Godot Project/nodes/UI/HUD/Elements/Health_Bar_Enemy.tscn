[gd_scene load_steps=9 format=2]

[ext_resource path="res://sprites/UI/HUD/health_bar/spr_ui_hud_health_bar_icons.png" type="Texture" id=1]
[ext_resource path="res://sprites/UI/HUD/health_bar/spr_ui_hud_health_bar_container.png" type="Texture" id=2]
[ext_resource path="res://sprites/UI/HUD/health_bar/spr_ui_hud_health_bar_progress.png" type="Texture" id=3]
[ext_resource path="res://scripts/UI/HUD/Health_Bar_Enemy.gd" type="Script" id=5]

[sub_resource type="Shader" id=29]
code = "shader_type canvas_item;

uniform float color_palette_modifier : hint_range(0.0, 1.0) = 0.0;

uniform int numberOfColors : hint_range(1, 3);
uniform vec4 C1 : hint_color;
uniform vec4 C2 : hint_color;
uniform vec4 C3 : hint_color;


void fragment(){
	vec4 referenceColors[12];
	referenceColors[0] = C1;
	referenceColors[1] = C2;
	referenceColors[2] = C3;

	
	vec4 textureColor = texture(TEXTURE, UV);
	

	COLOR.rgb = mix(textureColor.rgb,referenceColors[int(floor(textureColor.r * float(numberOfColors)))].rgb,color_palette_modifier);
	COLOR.a = textureColor.a;

}"

[sub_resource type="ShaderMaterial" id=30]
resource_local_to_scene = true
shader = SubResource( 29 )
shader_param/color_palette_modifier = 0.0
shader_param/numberOfColors = 3
shader_param/C1 = Color( 0.34552, 0.796875, 0.766275, 1 )
shader_param/C2 = Color( 0.556863, 0.901961, 0.878431, 1 )
shader_param/C3 = Color( 0.803922, 0.945098, 1, 1 )

[sub_resource type="Shader" id=33]
code = "shader_type canvas_item;

uniform vec4 first_color : hint_color = vec4(1.0);
uniform vec4 second_color : hint_color = vec4(0.0, 0.0, 0.0, 1.0);
uniform float position : hint_range(-0.5, 0.5) = 0.0;
uniform float size : hint_range(0.5, 2) = 0.5;
uniform float angle : hint_range(0.0, 360.0) = 0.0;

void fragment() {
	float pivot = position + 0.5;
	vec2 uv = UV - pivot;
	float rotated = uv.x * cos(radians(angle)) - uv.y * sin(radians(angle)); 
	float pos = smoothstep((1.0 - size) + position, size + 0.0001 + position, rotated + pivot);
	COLOR = mix(first_color, second_color, pos); 
	COLOR.a = texture(TEXTURE,UV).a;
}"

[sub_resource type="ShaderMaterial" id=32]
shader = SubResource( 33 )
shader_param/first_color = Color( 0.133333, 0.262745, 0.0509804, 1 )
shader_param/second_color = Color( 0.192157, 0.682353, 0.105882, 1 )
shader_param/position = -0.246
shader_param/size = 0.642
shader_param/angle = 0.0

[node name="Health_Bar_Enemy" type="Control"]
pause_mode = 2
material = SubResource( 30 )
margin_right = 40.0
margin_bottom = 40.0
rect_scale = Vector2( -1, 1 )
script = ExtResource( 5 )

[node name="Icon" type="Sprite" parent="."]
position = Vector2( 6, -20 )
scale = Vector2( -1, 1 )
texture = ExtResource( 1 )
hframes = 3
vframes = 2
frame = 5

[node name="Backframe" type="Sprite" parent="Icon"]
show_behind_parent = true
texture = ExtResource( 1 )
hframes = 3
vframes = 2
frame = 1

[node name="Health_Bar_Frame" type="TextureProgress" parent="."]
show_behind_parent = true
margin_left = 17.0
margin_top = -28.0
margin_right = 138.0
margin_bottom = -20.0
rect_pivot_offset = Vector2( -13, -22 )
max_value = 16.0
step = 0.5
value = 7.0
texture_under = ExtResource( 2 )
nine_patch_stretch = true
stretch_margin_left = 1
stretch_margin_right = 11

[node name="Health_Bar_Progress_red" type="TextureProgress" parent="Health_Bar_Frame"]
margin_left = 3.0
margin_right = 118.0
margin_bottom = 8.0
max_value = 16.0
step = 0.2
value = 16.0
texture_progress = ExtResource( 3 )
tint_progress = Color( 0.878431, 0, 0, 1 )
nine_patch_stretch = true
stretch_margin_left = 1
stretch_margin_right = 3

[node name="Health_Bar_Progress" type="TextureProgress" parent="Health_Bar_Frame"]
material = SubResource( 32 )
margin_left = 3.0
margin_right = 118.0
margin_bottom = 8.0
max_value = 48.0
step = 0.5
texture_progress = ExtResource( 3 )
nine_patch_stretch = true
stretch_margin_left = 1
stretch_margin_right = 3

[node name="Timer" type="Timer" parent="."]
pause_mode = 1
process_mode = 0
wait_time = 0.04
one_shot = true

[node name="Red_start_timer" type="Timer" parent="."]
process_mode = 0
one_shot = true

[node name="red_decrement_timer" type="Timer" parent="."]
process_mode = 0
wait_time = 0.02
one_shot = true

[connection signal="timeout" from="Red_start_timer" to="." method="_on_Red_start_timer_timeout"]
